import * as tmp from "tmp";
export interface DockerPullResult {
    imageDigest: string;
    stagingDir: tmp.DirResult | null;
    /** @deprecated caching is no longer used */
    cachedLayersDigests: string[];
    missingLayersDigests: string[];
    pullDuration: number;
}
export interface DockerPullOptions {
    username?: string;
    password?: string;
    reqOptions?: any;
    /**
     * loadImage will default to true if no value is sent
     */
    loadImage?: boolean;
}
export declare class DockerPull {
    private static findDockerBinary;
    pull(registryBase: string, repo: string, tag: string, opt?: DockerPullOptions): Promise<DockerPullResult>;
    private getLayers;
    private saveRequests;
    private buildImage;
    private loadImage;
}
